{"version":3,"sources":["sound/hit.mp3","sound/miss.mp3","sound/fight.mp3","sound/winComp.mp3","sound/winPlayer.mp3","components/BattlefieldContext.jsx","components/Ship.jsx","components/ArrangeShips.jsx","components/DrawIdx.jsx","components/War.jsx","components/Battlefield.jsx","App.js","index.js"],"names":["BattlefieldContext","React","createContext","Provider","ContextApp","children","useState","arrangeShips","setArrangeShips","arrangeShipsMode","setArrangeShipsMode","Array","fill","map","playerBF","setPlayerBF","compBF","setCompBF","bfCoord","setBFcoord","playerShips","setPlayerShips","compShips","setCompShips","turn","setTurn","turnNum","setTurnNum","lang","setLang","useEffect","turnInfo","store","dispatch","type","payload","console","log","getState","message","ru","gameTitle","arrangeShipsManual","arrangeShipsAuto","remarkLBtn","remarkRBtn","playerTurn","compTurn","begin","playerHits","playerMissed","compHits","compMissed","winPlayer","toUpperCase","winComp","en","useSound","mp3Hit","playHit","mp3Miss","playMiss","mp3Fight","playFight","mp3winComp","playWinComp","mp3winPlayer","playWinPlayer","getBFcoord","box","data","top","bottom","left","right","width","height","gridCol","el","idx","gridRow","elem","document","querySelector","getBoundingClientRect","n","item","i","ship","num","length","prev","concat","createShips","querySelectorAll","value","getRnd","Math","ceil","random","checkWinner","includes","flat","filter","Ship","useContext","orientY","setOrientY","checkSetShip","shipCol","shipRow","trg","comp","putOk","e","newBF","a","coordY","coordX","undefined","onmousemove","onmouseup","setTimeout","toString","Fragment","className","id","uuid","style","onDragStart","onMouseDown","button","target","shiftX","pageX","shiftY","pageY","position","zIndex","moveAt","closest","x","y","onContextMenu","ev","preventDefault","ArrangeShips","addEventListener","key","onClick","DrawIdx","gridColumn","String","fromCharCode","War","alarm","setAlarm","pads","shoot","evX","clientX","evY","clientY","shootCheck","newState","removeEventListener","bind","body","cursor","prevBFs","JSON","parse","Battlefield","classList","toggle","href","createStore","state","action","splice","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3931b724.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hit.8c96d676.mp3\";","export default __webpack_public_path__ + \"static/media/miss.b9a5893c.mp3\";","export default __webpack_public_path__ + \"static/media/fight.15e2f926.mp3\";","export default __webpack_public_path__ + \"static/media/winComp.f369007a.mp3\";","export default __webpack_public_path__ + \"static/media/winPlayer.4834e938.mp3\";","import React, { useEffect, useState } from 'react';\r\n\r\nimport {store} from '../App';\r\n\r\nimport useSound from 'use-sound';\r\nimport mp3Hit from '../sound/hit.mp3';\r\nimport mp3Miss from '../sound/miss.mp3';\r\nimport mp3Fight from '../sound/fight.mp3';\r\nimport mp3winComp from '../sound/winComp.mp3';\r\nimport mp3winPlayer from '../sound/winPlayer.mp3';\r\n\r\nexport const BattlefieldContext = React.createContext({});\r\n\r\nconst Provider = BattlefieldContext.Provider;\r\n\r\nexport default function ContextApp ({ children }) {\r\n    const [ arrangeShips, setArrangeShips ] = useState(true);\r\n    const [ arrangeShipsMode, setArrangeShipsMode ] = useState('begin');\r\n    const [ playerBF, setPlayerBF ] = useState(Array(10).fill('-').map(() => Array(10).fill('-')));\r\n    const [ compBF, setCompBF ] = useState(Array(10).fill('-').map(() => Array(10).fill('-')));\r\n    const [ bfCoord, setBFcoord ] = useState({});\r\n    const [ playerShips, setPlayerShips ] = useState(null);\r\n    const [ compShips, setCompShips ] = useState(null);\r\n    const [ turn, setTurn ] = useState('begin'); //begin,player,comp\r\n    const [ turnNum, setTurnNum ] = useState(0);\r\n    const [ lang, setLang ] = useState('ru');\r\n\r\n    useEffect(() => {\r\n        if (turnNum>0) {\r\n        // let turnInfo = JSON.stringify({ playerBF, compBF });\r\n        let turnInfo = { turnNum, playerBF, compBF};\r\n        store.dispatch({ type: 'ADD_TURN', payload: turnInfo });\r\n        console.log (store.getState())\r\n        }\r\n    }, [turnNum])\r\n    \r\n    const message = {\r\n        ru: {\r\n            gameTitle: 'Морской бой',\r\n            arrangeShips: 'Расстановка кораблей',\r\n            arrangeShipsManual: 'Вручную',\r\n            arrangeShipsAuto: 'Автоматически',\r\n            remarkLBtn: 'Кликните на корабль левой кнопкой мыши чтобы выбрать его',\r\n            remarkRBtn: 'Кликните на корабль правой кнопкой мыши чтобы повернуть его',\r\n            playerTurn: 'Ваш ход!',\r\n            compTurn: 'Ход компьютера!',\r\n            begin: 'Да начнётся битва!',\r\n            playerHits: 'Вы попали!',\r\n            playerMissed: 'Вы промахнулись!',\r\n            compHits: 'Компьютер попал!',\r\n            compMissed: 'Компьютер промахнулся!',\r\n            winPlayer: 'Вы победили!'.toUpperCase(),\r\n            winComp: 'Компьютер победил!'.toUpperCase(),\r\n        },\r\n        en: {\r\n            gameTitle: 'Sea Battle',\r\n            arrangeShips: 'Arrange Ships',\r\n            arrangeShipsManual: 'Manual',\r\n            arrangeShipsAuto: 'Automatic',\r\n            remarkLBtn: 'Click left mouse button on the ship to select it',\r\n            remarkRBtn: 'Click right mouse button on the ship to rotate it',\r\n            playerTurn: 'Your turn!',\r\n            compTurn: 'Computer turn!',\r\n            begin: `Fight!`,\r\n            playerHits: 'Hit the target!',\r\n            playerMissed: 'Miss the target!',\r\n            compHits: 'Computer Hit the target!',\r\n            compMissed: 'Computer Miss the target!',\r\n            winPlayer: 'You Win!'.toUpperCase(),\r\n            winComp: 'Computer Win!'.toUpperCase(),\r\n        }\r\n    };\r\n\r\n    const [playHit] = useSound(mp3Hit);\r\n    const [playMiss] = useSound(mp3Miss);\r\n    const [playFight] = useSound(mp3Fight);\r\n    const [playWinComp]= useSound(mp3winComp);\r\n    const [playWinPlayer]= useSound(mp3winPlayer);\r\n    \r\n    function checkWinner() {\r\n        if (turn.includes('comp') || turn.includes('player')) {\r\n            if ([...playerBF].flat().filter(el=> el===+el).length === 0) {\r\n                playWinComp();\r\n                setTurn('winComp');\r\n            }\r\n            if ([...compBF].flat().filter(el=> el===+el).length === 0) {\r\n                playWinPlayer();\r\n                setTurn('winPlayer');\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    function createShips() {\r\n        const data = [ [1, 4], [2, 3], [3, 2], [4, 1] ];\r\n        let n=0;\r\n        for (let item of data) \r\n            for (let i=0; i<item[0]; i++) {\r\n                let ship = { num: n++, length: item[1] }\r\n                setPlayerShips(prev => prev ? prev.concat(ship) : [ship]);\r\n                setCompShips(prev => prev ? prev.concat(ship) : [ship]);\r\n            }\r\n    };\r\n\r\n    function getRnd(i=0) {\r\n        while (i<1 || i>10) {\r\n          i = Math.ceil(Math.random()*10)\r\n        }\r\n        return i;\r\n    }\r\n\r\n    function getBFcoord(box) {\r\n        let data = {\r\n          top: box.top,\r\n          bottom: box.bottom,\r\n          left: box.left,\r\n          right: box.right,\r\n          width: box.width,\r\n          height: box.height,\r\n          gridCol: new Array(11).fill(0).map((el,idx) => box.left + idx * box.width/10),\r\n          gridRow: new Array(11).fill(0).map((el,idx) => box.top + idx * box.height/10)\r\n        };\r\n        setBFcoord(data);\r\n      }\r\n\r\n    useEffect(()=> {\r\n        let elem = document.querySelector('.battlefield-pad').getBoundingClientRect();\r\n        createShips();\r\n        getBFcoord(elem);\r\n        \r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        if (!arrangeShips) {\r\n            let box = document.querySelectorAll('.battlefield-pad')[1].getBoundingClientRect();\r\n            getBFcoord(box);\r\n        }\r\n    }, [arrangeShips])\r\n\r\n    return (\r\n        <Provider value={{\r\n            arrangeShips, setArrangeShips,\r\n            arrangeShipsMode, setArrangeShipsMode,\r\n            playerBF, setPlayerBF,\r\n            compBF, setCompBF,\r\n            playerShips, setPlayerShips,\r\n            compShips, setCompShips,\r\n            bfCoord,\r\n            message,\r\n            turn, setTurn,\r\n            turnNum, setTurnNum,\r\n            lang, setLang,\r\n            getRnd, playHit, playMiss, playFight, checkWinner,\r\n            store\r\n        }}>\r\n            {children}\r\n        </Provider>\r\n    );\r\n};","import React, {useState, useContext, useEffect} from 'react';\r\nimport { BattlefieldContext } from \"./BattlefieldContext\";\r\nimport uuid from 'react-uuid';\r\n\r\nexport default function Ship({length, num}) {\r\n  const { setPlayerShips, setCompShips,\r\n        compBF, setCompBF, bfCoord, playerBF,\r\n        setPlayerBF, arrangeShipsMode, getRnd } = useContext(BattlefieldContext);\r\n  const [ orientY, setOrientY ] = useState(arrangeShipsMode!=='auto' ? false : Math.random()>.5 );\r\n\r\n  function checkSetShip(shipCol,shipRow,trg,comp) {\r\n    let putOk = true;\r\n    for(let i=0; i<length; i++) {\r\n        try {\r\n          if (!comp) {\r\n            if (!orientY && playerBF[shipRow-1][shipCol-1+i] !== '-') putOk = false;\r\n            if (orientY && playerBF[shipRow-1+i][shipCol-1] !== '-') putOk = false;\r\n          } else {\r\n            if (!orientY && compBF[shipRow-1][shipCol-1+i] !== '-') putOk = false;\r\n            if (orientY && compBF[shipRow-1+i][shipCol-1] !== '-') putOk = false;\r\n          }\r\n        }\r\n        catch (e) {\r\n          putOk = false;\r\n        }\r\n    }\r\n\r\n    if (putOk) {\r\n      let newBF = comp ? [...compBF] : [...playerBF];\r\n\r\n      for(let i=0; i<length; i++) {  // set ship in array BF\r\n        if (!orientY)\r\n          newBF[shipRow-1][shipCol-1+i] = num\r\n        else\r\n          newBF[shipRow-1+i][shipCol-1] = num;\r\n      };\r\n\r\n      for (let a=0; a<3; a++) {\r\n        for(let i=0; i<length+2; i++) {  // set ship's deadarea in array BF\r\n          let coordY, coordX;\r\n            if (!orientY) { \r\n              coordY = shipRow-2+a;\r\n              coordX = shipCol-2+i;\r\n            } else {\r\n              coordY = shipRow-2+i;\r\n              coordX = shipCol-2+a;\r\n            }\r\n\r\n            if (coordY<0 || coordX<0 || coordY>9 || coordX>9) continue;\r\n              \r\n            let el = newBF[coordY][coordX];\r\n            if (el===undefined) continue;\r\n\r\n            if (el!==+el && el!=='D') newBF[coordY][coordX]='D';\r\n        }\r\n      }\r\n\r\n      if (!comp) {\r\n        setPlayerBF(newBF);\r\n        setPlayerShips(prev => prev.filter(el=> el.num!==num));\r\n      } else {\r\n        setCompBF(newBF);\r\n        setCompShips(prev => prev.filter(el=> el.num!==num));\r\n      }\r\n      document.onmousemove = null;\r\n      if (trg) trg.onmouseup = null;\r\n    }\r\n\r\n    if (!putOk) { // retry to set ship if bad position (auto set & comp bf) \r\n      if (!comp && arrangeShipsMode==='auto') {\r\n        checkSetShip(getRnd(),getRnd(),null)\r\n      } else if (comp) {\r\n        checkSetShip(getRnd(),getRnd(),null,true)\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleShipMove(e) {\r\n      if (e.button !== 0) return;\r\n      let trg = e.target;\r\n      let box = trg.getBoundingClientRect();\r\n      let shiftX = e.pageX - box.left;\r\n      let shiftY = e.pageY - box.top;\r\n      \r\n      trg.style.position = 'absolute';\r\n      trg.style.zIndex = 9;\r\n\r\n      moveAt(e);\r\n    \r\n      function moveAt(e) {\r\n        trg.style.left = e.pageX - shiftX + 'px';\r\n        trg.style.top = e.pageY - shiftY + 'px';\r\n      }\r\n    \r\n      document.onmousemove = e => moveAt(e);\r\n\r\n      trg.onmouseup = function(e) {\r\n        let ship = e.target.closest('.ship').getBoundingClientRect();\r\n        let shipCol;\r\n        let shipRow;\r\n\r\n        for (let i=0; i<bfCoord.gridCol.length-1; i++) { // get ship's start position Col & Row\r\n          if (ship.x >= bfCoord.gridCol[i] && ship.x <= bfCoord.gridCol[i+1]) shipCol = i+1;\r\n          if (ship.y >= bfCoord.gridRow[i] && ship.y <= bfCoord.gridRow[i+1]) shipRow = i+1;\r\n        }\r\n\r\n        if (shipCol===undefined || shipRow===undefined || shipCol<1 || shipRow<1) return;\r\n        \r\n        if (arrangeShipsMode!=='auto') checkSetShip(shipCol,shipRow,trg);\r\n      };\r\n  }\r\n\r\n  function handleRotate(ev) {\r\n    ev.preventDefault();\r\n    setOrientY(prev=>!prev);\r\n  }\r\n           \r\n  useEffect( () => { // auto set ships for Player and PC \r\n    if (arrangeShipsMode==='auto') {\r\n      setTimeout(()=> {\r\n        let playerShipSet = playerBF.toString().includes(num);\r\n        if (!playerShipSet) checkSetShip(getRnd(),getRnd(),null);\r\n      },num*500);\r\n    };\r\n    let compShipSet = compBF.toString().includes(num);\r\n    if (!compShipSet) checkSetShip(getRnd(),getRnd(),null,true);\r\n  }, [playerBF,compBF] );\r\n\r\n  return (\r\n  <React.Fragment key = {uuid()}>\r\n    <span   className = 'ship'\r\n            id = {uuid()}\r\n            style = {!orientY ? {width: length*33, height: 33} : {width: 33, height: length*33}}\r\n            onDragStart = { () => {return false} }\r\n            onMouseDown = {handleShipMove}\r\n            onContextMenu = {handleRotate}\r\n    />\r\n    <span className='ship-margin' />\r\n  </React.Fragment>\r\n  )\r\n}","import React, {useEffect, useContext} from 'react';\r\nimport { BattlefieldContext } from \"./BattlefieldContext\";\r\nimport uuid from 'react-uuid';\r\nimport Ship from './Ship';\r\n\r\nexport default function ArrangeShips() {\r\n    const { lang, message, playerShips, arrangeShipsMode, setArrangeShipsMode, setArrangeShips } = useContext(BattlefieldContext);\r\n\r\n    function handleKeyboard(ev) {\r\n        if (ev.key==='1') setArrangeShipsMode('manual')\r\n        else if (ev.key==='2') setArrangeShipsMode('auto');\r\n    }\r\n\r\n    document.addEventListener('keydown',handleKeyboard);\r\n\r\n    useEffect( () => {\r\n        if (playerShips && playerShips.length===0)\r\n            setArrangeShipsMode('playerReady');\r\n    } , [playerShips]);\r\n\r\n    useEffect( () => {\r\n        if (arrangeShipsMode==='playerReady') setArrangeShips(false);\r\n    }, [arrangeShipsMode] )\r\n\r\n    return (\r\n        <div className='battlefield-menu'>\r\n\r\n            { (arrangeShipsMode==='begin' || arrangeShipsMode==='manual' || arrangeShipsMode==='auto') &&\r\n             <p className='battlefield-menu--title'> {message[lang].arrangeShips}\r\n                { lang==='en' && arrangeShipsMode!=='begin' &&\r\n                    <span>: {arrangeShipsMode}</span> \r\n                }\r\n                { lang==='ru' && arrangeShipsMode==='manual' && <span>: вручную</span> }\r\n                { lang==='ru' && arrangeShipsMode==='auto' && <span>: авто</span> }\r\n            </p> }\r\n\r\n            {arrangeShipsMode === 'manual' &&\r\n                <span className='battlefield-menu--remark'>\r\n                    { message[lang].remarkLBtn } <br/>\r\n                    { message[lang].remarkRBtn }\r\n                </span>}\r\n\r\n            { arrangeShipsMode === 'begin' &&\r\n            <ul className='battlefield-menu--list'>\r\n                <li onClick={()=>setArrangeShipsMode('manual')}> 1) {message[lang].arrangeShipsManual}</li>\r\n                <li onClick={()=>setArrangeShipsMode('auto')}> 2) {message[lang].arrangeShipsAuto}</li>\r\n            </ul>\r\n            }\r\n\r\n            { (arrangeShipsMode==='manual' || arrangeShipsMode==='auto') &&\r\n                <div className='battlefield-menu--ships'>\r\n                    { playerShips.map(ship =>\r\n                        <Ship key={uuid()} length={ship.length} num={ship.num} /> )\r\n                    }\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import { useContext } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport { BattlefieldContext } from \"./BattlefieldContext\";\r\n\r\nexport default function DrawIdx({type}) {\r\n    const digits = [1,2,3,4,5,6,7,8,9,10];\r\n    const { lang } = useContext(BattlefieldContext);\r\n\r\n    return (\r\n    <div className={'battlefield-'+type}>\r\n    { digits.map( item =>\r\n        <span   className='idx'\r\n                key={uuid()}\r\n                style={ type==='digits' ? {gridColumn: item} : {gridRow: item} }>\r\n            { type === 'digits' ? item : lang==='ru' && (item!==10 ? String.fromCharCode(item+1039) : 'К') }\r\n            { (type !== 'digits' && lang === 'en') && String.fromCharCode(item+64)  }\r\n        </span>\r\n    ) }\r\n    </div>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react';\r\nimport uuid from 'react-uuid';\r\n\r\nimport { BattlefieldContext } from \"./BattlefieldContext\";\r\n\r\nexport default function War() {\r\n    const { message, bfCoord, checkWinner, lang,\r\n            compBF, setCompBF, playerBF, setPlayerBF,\r\n            getRnd, turn, setTurn, \r\n            turnNum, setTurnNum,\r\n            playHit, playMiss, playFight,\r\n            store } = useContext(BattlefieldContext);\r\n    const [ alarm, setAlarm ] = useState(null);\r\n    const pads = document.querySelectorAll('.battlefield-pad');\r\n\r\n    function turnBack() {\r\n        console.log(store.getState());\r\n        // store.dispatch({ type: 'TURN_BACK' });\r\n        let prevBFs = JSON.parse( store.getState() );\r\n        console.log('must-be = ',prevBFs[turnNum-2]);\r\n\r\n        // setPlayerBF(prevBFs[turnNum-2].playerBF);\r\n        // setCompBF(prevBFs[turnNum-2].compBF);\r\n        // setTurnNum(prev=>prev-2);\r\n    }\r\n\r\n    function shoot(ev) {\r\n        let x, y;\r\n        let evX = ev.clientX;\r\n        let evY = ev.clientY;\r\n\r\n        for (let i=0; i<bfCoord.gridCol.length-1; i++) { // get player's shoot Col & Row\r\n            if (evX >= bfCoord.gridCol[i] && evX <= bfCoord.gridCol[i+1]) x = i+1;\r\n            if (evY >= bfCoord.gridRow[i] && evY <= bfCoord.gridRow[i+1]) y = i+1;\r\n        };\r\n\r\n        shootCheck(x,y);\r\n    } \r\n\r\n    function shootCheck(x,y) {\r\n        if (!x || !y) {\r\n            x = getRnd();\r\n            y = getRnd();\r\n        }\r\n\r\n        let newBF = (turn==='player' ? [...compBF] : [...playerBF]);\r\n        let el = newBF[y-1][x-1];\r\n        if (+el===el) {             // hit the target\r\n            newBF[y-1][x-1] = 'X';\r\n            playHit();\r\n            turn==='player' ? setCompBF(newBF) : setPlayerBF(newBF);\r\n            turn==='player' ? setAlarm('playerHits') : setAlarm('compHits');\r\n\r\n            if (turn.includes('comp')) {\r\n                let newState = turn+(uuid());\r\n                setTimeout( () => setTurn(newState), 999);\r\n            }\r\n        } else if (el==='X' || el==='*') {  // shoot second time the same point\r\n            if (turn.includes('comp')) {\r\n                let newState = turn+(uuid());\r\n                setTurn(newState)\r\n            }\r\n            return;\r\n        } else {    // miss the target\r\n                newBF[y-1][x-1] = '*';\r\n                playMiss();\r\n                turn==='player' ? setCompBF(newBF) : setPlayerBF(newBF);\r\n                turn==='player' ? setAlarm('playerMissed') : setAlarm('compMissed');\r\n            setTimeout(() => {\r\n                if (turn==='player') setTurn('comp')\r\n                else if (turn.includes('comp')) setTurn('player');\r\n                return; \r\n            }, 999);\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        checkWinner();\r\n\r\n        if (!turn.includes('player')) {\r\n            try {\r\n                if (pads.length>=2) pads[1].removeEventListener('click',shoot);\r\n            }\r\n            catch(e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        if (turn === 'begin') {\r\n            playFight();\r\n            setTimeout( setTurn.bind(null,'player'), 2000);\r\n        };\r\n\r\n        if (turn.includes('player')) {\r\n            document.body.style.cursor = 'auto';\r\n            pads[1].style.cursor = 'pointer';\r\n            pads[1].addEventListener('click',shoot);\r\n        }\r\n\r\n        if (turn.includes('comp')) {\r\n            document.body.style.cursor = 'wait';\r\n            pads[1].style.cursor = 'wait';\r\n            shootCheck()\r\n        }\r\n    }, [turn]);\r\n\r\n    useEffect(()=> alarm && setTimeout(() => setAlarm(null), 2000), [alarm]);\r\n\r\n    useEffect(() => setTurnNum(prev=> prev+1), [compBF] )\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className='time-machine--box'>\r\n            {turnNum>1 && \r\n                <button className='time-machine--back'\r\n                        onClick={turnBack}>\r\n                    &#10094;\r\n                </button>\r\n            }\r\n            <div className='turn-counter'>\r\n                {turnNum}\r\n            </div>\r\n        </div>\r\n        <div className='war-info'>\r\n            { turn === 'begin' && message[lang].begin }\r\n            { turn === 'player' && message[lang].playerTurn }\r\n            { turn.includes('comp') && message[lang].compTurn }\r\n            { turn === 'winComp' && message[lang].winComp }\r\n            { turn === 'winPlayer' && message[lang].winPlayer }\r\n            &nbsp;\r\n            { alarm === 'playerHits' && message[lang].playerHits }\r\n            { alarm === 'playerMissed' && message[lang].playerMissed }\r\n            { alarm === 'compHits' && message[lang].compHits }\r\n            { alarm === 'compMissed' && message[lang].compMissed }\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport uuid from 'react-uuid';\r\nimport { BattlefieldContext } from \"./BattlefieldContext\";\r\nimport ArrangeShips from './ArrangeShips';\r\nimport DrawIdx from './DrawIdx';\r\nimport War from './War';\r\n\r\nexport default function Battlefield() {\r\n    const { message, lang, setLang, arrangeShips, playerBF, compBF } = useContext(BattlefieldContext);\r\n\r\n    function handleLangBtn(ev) {\r\n        let trgClass = ev.target.classList;\r\n        trgClass.toggle('lang-en');\r\n        lang==='ru' ? setLang('en') : setLang('ru');\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <h1 className='app-title'>\r\n          { message[lang].gameTitle }\r\n        </h1>\r\n        <button className='btn-lang' onClick={handleLangBtn} />\r\n        <div className='container'>\r\n            <div className='battlefield'>\r\n                <DrawIdx type='digits'/>\r\n                <DrawIdx type='letters'/>\r\n                <div className='battlefield-pad'>\r\n                    { playerBF.length === 10 &&\r\n                    playerBF.flat().map(el=>\r\n                        <span \r\n                            className={+el===el ? 'shipEl' : el==='D' ? 'deadarea' : el==='X' ? 'hit' : 'empty'}\r\n                            key={uuid()}\r\n                        >\r\n                            { el==='*' && el }\r\n                        </span>) }\r\n                </div>\r\n            </div>\r\n\r\n            { arrangeShips && <ArrangeShips/> }\r\n\r\n            { !arrangeShips &&\r\n                <div className='battlefield battlefield--comp'>\r\n                    <DrawIdx type='digits'/>\r\n                    <DrawIdx type='letters'/>\r\n                    <div className='battlefield-pad'>\r\n                    { compBF.length === 10 &&\r\n                        compBF.flat().map(el=>\r\n                            <span className={el==='X' ? 'hit' : 'empty'} key={uuid()} >\r\n                                { el==='*' && el }\r\n                            </span>) }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n        { !arrangeShips && <War/>}\r\n\r\n        <footer className=\"footer\">\r\n            <a className=\"footer__link\" href=\"https://github.com/g5-freemen\">\r\n                    Made by Anton Borkovskij, 2021\r\n            </a>\r\n        </footer>\r\n        </React.Fragment>\r\n    )\r\n}","import './App.css';\nimport ContextApp from './components/BattlefieldContext';\nimport Battlefield from './components/Battlefield';\nimport { createStore } from 'redux';\n\nfunction timeMachine(state = [], action) {\n  if (action.type === 'ADD_TURN') {\n    return [...state, action.payload];\n    // let turnInfo = { playerBF, compBF};\n    // store.dispatch({ type: 'ADD_TURN', payload: turnInfo });\n    // return state;\n  } else if (action.type ===  'TURN_BACK') {\n    return [...state].splice(-1);\n  } else\n  return state;\n}\n\nexport const store = createStore(timeMachine);\n\nexport default function App() {\n  return (\n    <ContextApp>\n      <div className=\"App\">\n        <Battlefield />\n      </div>\n    </ContextApp>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}